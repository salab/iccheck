name: release

on:
  push:
    tags:
      - v*.*.*
    branches-ignore:
      - '**'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: iccheck
          path: dist/*

  vsce-build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            binary_name: windows_amd64
            npm_config_arch: x64
          - os: windows-latest
            platform: win32
            arch: arm64
            binary_name: windows_arm64
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: linux
            arch: x64
            binary_name: linux_amd64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            binary_name: linux_arm64
            npm_config_arch: arm64
          - os: macos-latest
            platform: darwin
            arch: x64
            binary_name: darwin_amd64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            binary_name: darwin_arm64
            npm_config_arch: arm64
    runs-on: ${{ matrix.os }}
    needs:
      - goreleaser
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: iccheck
          path: dist
      - name: Set VERSION env
        run: echo "VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV
      - name: Extract binary
        run: tar -zxvf dist/iccheck_${{ env.VERSION }}_${{ matrix.binary_name }}.tar.gz
      - name: Place binary
        run: mv iccheck ./plugins/vscode/

      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ matrix.npm_config_arch }}
      - shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
      - run: npx vsce package --target ${{ env.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.target }}
          path: "*.vsix"

  vsce-publish:
    runs-on: ubuntu-latest
    needs:
      - vsce-build
    if: success() && startsWith( github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
      - run: npx vsce publish --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
